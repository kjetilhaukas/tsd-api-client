#!/bin/bash

if [[ $# -lt 1 ]]; then
    echo ""
    echo "  Missing arguments, exiting"
    echo "  tacl --help <admin,data> for help"
    echo "  tacl --guide <admin,data> for a longer explanation"
    echo ""
    exit 1
fi

pnum_from_uname() {
    echo $1 | sed 's/p\(.*\)-\(.*\)/p\1/g'
}

collect_credentials() {
    read -p 'User > ' USERNAME
    read -s -p 'Password > ' PASSWORD; echo
    read -p 'OTP > ' OTP
}

exit_if_is_directory() {
    if [[ -d $1 ]]; then
        echo 'Input data is a directory'
        echo 'This method handles files only'
        exit 1
    fi
}

optionally_append_extension_to_file() {
    if [[ $1 == 'none' ]]; then
        dest_file=$2.$3
    else
        dest_file=$2
    fi
}

import_data() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            --env)       shift; API_ENV=$1; shift ;;
            --pre)       shift; PRE=$1; shift ;;
            --post)      shift; POST=$1; shift ;;
            --data)      shift; INPUT_DATA=$1; shift ;;
            --import)    shift; INPUT_DATA=$1; shift ;;
            --recipient) shift; RECIPIENT=$1; shift ;;
            --group)     shift; GROUP=$1; shift ;;
            *)           shift ;;
        esac
    done

    if [[ $POST == '' ]]; then
        POST='none'
    fi

    if [[ $API_ENV == '' ]]; then
        API_ENV='prod'
    fi

    PNUM=$(pnum_from_uname $USERNAME)

    if [[ $GROUP == '' ]]; then
        GROUP="$PNUM-member-group"
    fi

    # Files
    # -----

    if [[ $PRE == '' ]]; then
        exit_if_is_directory $INPUT_DATA
        tacl_data --tsd_api_key --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $INPUT_DATA \
            --user_name $USERNAME --password $PASSWORD --otp $OTP
        exit 0
    elif [[ $PRE == 'compress' ]]; then
        echo 'data import with compression'
        exit_if_is_directory $INPUT_DATA
        optionally_append_extension_to_file $POST $INPUT_DATA 'gz'
        gzip -9 < $INPUT_DATA |
        tacl_data --tsd_api_key \
            --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    elif [[ $PRE == 'encrypt' ]]; then
        echo 'data import with encryption'
        exit_if_is_directory $INPUT_DATA
        optionally_append_extension_to_file $POST $INPUT_DATA 'aes'
        PW=$(openssl rand -base64 10)
        ENCPW=$(echo $PW | gpg -r $RECIPIENT --encrypt | openssl base64 -A)
        openssl enc -aes-256-cbc -in $INPUT_DATA -a -pass file:<( echo $PW ) |
        tacl_data --tsd_api_key \
            --encryptedpw $ENCPW --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    elif [[ $PRE == *"compress"* ]] && [[ $PRE == *"encrypt"* ]]; then
        echo 'data import with compression and encryption'
        exit_if_is_directory $INPUT_DATA
        optionally_append_extension_to_file $POST $INPUT_DATA 'gz.aes'
        PW=$(openssl rand -base64 10)
        ENCPW=$(echo $PW | gpg -r $RECIPIENT --encrypt | openssl base64 -A)
        gzip -9 < $INPUT_DATA |
        openssl enc -aes-256-cbc -in $INPUT_DATA -a -pass file:<( echo $PW ) |
        tacl_data --tsd_api_key \
            --encryptedpw $ENCPW --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0

    # Directories
    # -----------

    elif [[ $PRE == 'archive' ]]; then
        echo 'data import with tar'
        optionally_append_extension_to_file $POST $INPUT_DATA 'tar'
        tar -cf - $INPUT_DATA |
        tacl_data --tsd_api_key \
            --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"compress"* ]] && [[ $PRE == *"encrypt"* ]]; then
        echo 'data import with tar, compress, and encrypt'
        optionally_append_extension_to_file $POST $INPUT_DATA 'tar.gz.aes'
        PW=$(openssl rand -base64 10)
        ENCPW=$(echo $PW | gpg -r $RECIPIENT --encrypt | openssl base64 -A)
        tar -cf - $INPUT_DATA |
        gzip -9 |
        openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
        tacl_data --tsd_api_key \
            --encryptedpw $ENCPW \
            --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"encrypt"* ]]; then
        echo 'data import with tar and encrypt'
        optionally_append_extension_to_file $POST $INPUT_DATA 'tar.aes'
        PW=$(openssl rand -base64 10)
        ENCPW=$(echo $PW | gpg -r $RECIPIENT --encrypt | openssl base64 -A)
        tar -cf - $INPUT_DATA |
        openssl enc -aes-256-cbc -a -pass file:<( echo $PW ) |
        tacl_data --tsd_api_key \
            --encryptedpw $ENCPW \
            --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    elif [[ $PRE == *"archive"* ]] && [[ $PRE == *"compress"* ]]; then
        echo 'data import with tar and gzip'
        optionally_append_extension_to_file $POST $INPUT_DATA 'tar.gz'
        tar -cf - $INPUT_DATA | gzip -9 |
        tacl_data --tsd_api_key \
            --env $API_ENV --pnum $PNUM --group $GROUP \
            --post $POST --data $dest_file \
            --user_name $USERNAME --password $PASSWORD --otp $OTP -
        exit 0
    fi
}

export_data() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            --env)          shift; API_ENV=$1; shift ;;
            --export-list)  shift; SHOW="true"; ;;
            --export)       shift; FILENAME=$1; shift ;;
            *)              shift ;;
        esac
    done

    if [[ $API_ENV == '' ]]; then
        API_ENV='prod'
    fi

    PNUM=$(pnum_from_uname $USERNAME)

    if [[ $SHOW == "true" ]]; then
        tacl_data --tsd_api_key --env $API_ENV --pnum $PNUM --show \
            --user_name $USERNAME --password $PASSWORD --otp $OTP
        exit 0
    else
        tacl_data --tsd_api_key --env $API_ENV --pnum $PNUM --export $FILENAME \
        --user_name $USERNAME --password $PASSWORD --otp $OTP
        exit 0
    fi
    exit 0
}

if [[ $1 =~ ^('--help'|'--guide'|'--show_config'|'--del_config') ]]; then
    if [[ $2 == 'admin' ]]; then
        tacl_admin $1
        exit 0
    elif [[ $2 == 'data' ]]; then
        tacl_data $1
        exit 0
    else
        tacl_admin $@
        exit 0
    fi
fi

args=("$@")
for i in ${args[*]}; do
    if [[ $i == '--register' ]]; then
        tacl_admin --register_tsd_2fa
        exit 0
    elif [[ $i =~ ^('--signup'|'--confirm'|'--getapikey'|'--delapikey'|'--pwreset') ]]; then
        tacl_admin $@
        exit 0
    elif [[ $i =~ ^('--data'|'--import') ]]; then
        collect_credentials
        import_data $@
        exit 0
    elif [[ $i =~ ^('--export-list'|'--export') ]]; then
        collect_credentials
        export_data $@
        exit 0
    fi
done
